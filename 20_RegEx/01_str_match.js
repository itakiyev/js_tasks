/**
 * Поиск: str.match
 */


// Если у регулярного выражения есть флаг g, то он возвращает массив всех совпадений:
let str = "Любо, братцы, любо!";
alert(str.match(/любо/gi)); // Любо,любо (массив из 2х подстрок-совпадений)


/**
 * Если такого флага нет, то возвращает только первое совпадение в виде массива,
 * в котором по индексу 0 находится совпадение, и есть свойства с дополнительной информацией о нём:
 */

let str = "Любо, братцы, любо!";

let result = str.match(/любо/i); // без флага g

alert(result[0]);     // Любо (первое совпадение)
alert(result.length); // 1

// Дополнительная информация:
alert(result.index);  // 0 (позиция совпадения)
alert(result.input);  // Любо, братцы, любо! (исходная строка)

/**
 * И, наконец, если совпадений нет, то, вне зависимости от наличия флага g, возвращается null.
 * Это очень важный нюанс. При отсутствии совпадений возвращается не пустой массив, 
 * а именно null. Если об этом забыть, можно легко допустить ошибку, например:
 */

let matches = "JavaScript".match(/HTML/); // = null

if (!matches.length) { // Ошибка: у null нет свойства length
    alert("Ошибка в строке выше");
}

/**
 * Если хочется, чтобы результатом всегда был массив, можно написать так:
 */

let matches = "JavaScript".match(/HTML/) || [];

if (!matches.length) {
    alert("Совпадений нет"); // теперь работает
}